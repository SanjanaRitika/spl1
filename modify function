void modifylist()
{
	printf("\nOptions\n");
	printf("\n\t1. Update Price");
	printf("\n\t2. Update Quantity");
	printf("\n\nEnter choice\n");
	int choice; 
	scanf("%d",&choice);

	switch (choice)
	{
		case 1: modifyprice();
		break; 

		case 2: modifyqty();
		break;

		default: printf("\nInvalid choice!!");
		modifylist();
				
	}
	
}


void modifyprice()
{
	item product[100];
	int pno; 

	FILE *fp=fopen("records.bin","rb");
	fread(&product, sizeof(product),1,fp);
	
	FILE *counter=fopen("counter.dat","r");
	int count;
	fscanf(counter,"%d",&count);
	fclose(counter);
	
	printf("\nEnter product number of item to be modified: ");
	scanf("%d",&pno); 

	int price; 
	printf("\nEnter new price: ");
	scanf("%d",&price); 
	
	int i;
	int flag=0;
    for(i=0;i<count;i++)
    {
    	
    	if(product[i].prodno==pno)
    	{
    		flag=1;
    		
    		product[i].price=price;
    		printf("\n\nPrice updated\n");
    		break;
    	}
    	
    }
    
    if (flag==1)
    {
		FILE *fp2=fopen("records1.bin","wb");
		fwrite(&product, sizeof(item), count, fp2);
		remove("records.bin");
		rename("records1.bin","records.bin");
		fclose(fp2);
		
		char ch;
		printf("\n\nDo you want to modify more records? [Y/N]\n ");
		getchar();
		scanf("%c",&ch);
		
		if(ch=='y'|| ch=='Y')
		{
			modifyprice();
		}
		
		else
		{
			char ch;
			printf("\nWould you like to go back to menu? [Y/N]\n ");
			getchar();
			scanf("%c",&ch);	
		
			if(ch=='y'|| ch=='Y')
			{
				menu();
			}
		
			else
			{
				exit(0);
			}
		
		}

		
    }
    
    else
    {
		printf("\n\nEntered item not found!\n");
		char ch;
		printf("\nDo you want to try again? [Y/N] ");
		scanf("%c",&ch);
		
		if(ch=='y'|| ch=='Y')
		{
			modifyprice();
		}
		
		else
		{
			menu();
		}
		
	}
		
		
}
    
    
